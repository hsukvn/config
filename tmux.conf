set -g status-utf8 on
setw -g utf8 on

set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default

set  -g status-interval 1
set  -g status-justify centre # center align window list
set -g status-left '#[fg=green]#H #[fg=black]'
set  -g status-left-length 20
#set  -g status-right '#[fg=colour14]#(tmux-mem-cpu-load 1) #[fg=colour1]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") up #[fg=colour2,bg=default]%a %l:%M:%S %p#[default] #[fg=colour12]%Y-%m-%d'
set  -g status-right '#[fg=green,bg=default,bright]#(tmux-mem-cpu-load 1) #[fg=colour1]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") up #[fg=colour2,bg=default]%a %l:%M:%S %p#[default] #[fg=colour12]%Y-%m-%d'
#set -g status-right '#[fg=green,bg=default,bright]#(tmux-mem-cpu-load -i 1) #[fg=blue,bg=default]%Y-%m-%d'
set  -g status-right-length 140

setw -g window-status-format " #I #W#[fg=colour11]#F "
setw -g window-status-current-format " #I #W#[fg=colour8]#F "
setw -g window-status-current-attr none
setw -g window-status-current-bg colour0
setw -g window-status-current-fg colour2

# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a
bind-key C-a last-window

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside 
# another TMUX session
bind-key a send-prefix

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Vi copypaste mode
set-window-option -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -n C-k send-keys -R \; clear-history

# status bar
set-option -g status-utf8 on
set-option -g status-attr default

# set window split
bind-key v split-window -h
bind-key b split-window

bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# auto window rename
set-window-option -g automatic-rename

# rm mouse mode fail
set -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

# color
#set -g default-terminal "xterm"
set -g default-terminal "screen-256color"

# check for OS X, source ``$HOME/.tmux-osx.conf``
if-shell 'test "$(uname -s)" = Darwin' 'source-file ~/.tmux-osx.conf'


####
# Powerline
####
# pip install --user git+git://github.com/Lokaltog/powerline
if-shell 'test -f ~/.local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf' 'source-file ~/.local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf'

# [sudo] pip install git+git://github.com/Lokaltog/powerline
if-shell 'test -f /usr/local/lib/python2.7/dist-packages/powerline/bindings/tmux/powerline.conf' 'source-file /usr/local/lib/python2.7/dist-packages/powerline/bindings/tmux/powerline.conf'
# using python3.3
if-shell 'test -f /usr/local/lib/python3.3/dist-packages/powerline/bindings/tmux/powerline.conf' 'source-file /usr/local/lib/python3.3/dist-packages/powerline/bindings/tmux/powerline.conf'
# python 3.4?
# if-shell 'test -f /usr/local/lib/python3.4/dist-packages/powerline/bindings/tmux/powerline.conf' 'source-file /usr/local/lib/python3.4/dist-packages/powerline/bindings/tmux/powerline.conf'
