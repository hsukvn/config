#!/bin/bash
# Author:        thlu
# Last modified: 2011.02.16 10:41
#
# this script is for BuildAll progress

RootProcess="syno.build.all"
RootPid=$(pidof -x "$RootProcess")
BuildAll="BuildAll"
ScriptPath=$(dirname `readlink -f $0`)

# empty or unset is false
ShowCommandLine=

. $ScriptPath/syno.common ""
ppid() { # <pid>
	local pid=$1;
	local ppid="";
	if [ -z $pid ]; then
		return 1
	fi
	if [ -f /proc/$pid/status ]; then
		grep "PPid" /proc/$pid/status | awk '{print $2}'
	else
		echo ppid of $pid not found;
		return 1
	fi
}
RemoveChildrens() {
	local pid= list=

	for pid in "$@"; do
		if ! echo -n $@ | grep -qw `ppid $pid`; then
			list="$list $pid"
		fi
	done
	echo -n "$list"
}

die()	{ tt_warn "$@"; exit 1; }
usage()	{
	cat >&2 <<EOF
USAGE: $0 [options]
OPTIONS:
  -p <process name>    set root process of $BuildAll (default: $RootProcess)
  -c <script name>     set job script name (default: $BuildAll)
  -d                   debug mode
  -l                   show command of script
  -h                   show this help message
EOF
	exit 0;
}
while getopts 'p:c:hdl' opt; do
	case "$opt" in
		p) RootProcess=$OPTARG ; RootPid=$(pidof -x "$RootProcess") ;;
		c) BuildAll=$OPTARG ;;
		d) tt_DEBUG=on ;;
		l) ShowCommandLine=on ;;
		*) usage ;;
	esac
done

RootPid=$(RemoveChildrens $RootPid)

# main
tt_debug "RootPid=$RootPid"
if [ -z "$RootPid" ]; then
	tt_warn "RootProcess($RootProcess) is not running. "
	exit 0
fi

for pid in $RootPid; do
	pstree -p "$pid"
	if pstree "$pid" | grep -q "$BuildAll"; then
		tt_warn "$RootProcess($pid)"
		if [ "$ShowCommandLine" ]; then
			tt_warn "$(cat /proc/$pid/cmdline | perl -pe 's,\0, ,g')"
		fi
	else
		tt_warn "$RootProcess($pid) -- $BuildAll is not running..."
		continue
	fi

	if pstree $pid | grep -q "SynoUpdate"; then
		echo "  update"
		continue
	elif pstree $pid | grep -q "${BuildAll}---rm"; then
		echo "  remove project"
		continue
	elif pstree $pid | grep -q "${BuildAll}---cp"; then
		echo "  hard link"
		continue
	fi

	for i in `pstree -a -p "$pid" | sed -n '0,/^ \+\`-SynoBuild/s/^ \+[\`|]-SynoBuild,\([0-9]\+\) .*$/\1/p'`; do
	#for i in `pstree -p $pid | sed -n 's,^.*SynoBuild(\([0-9]\+\)).*$,\1,p'`; do
		progress=$(sudo readlink /proc/$i/cwd)
		if [ -z "$progress" ]; then
			tt_warn "readlink failed (/proc/$i/cwd), skip"
			continue
		else
			tt_debug "SynoBuild($i) progress: $progress"
		fi

		# FIXME workaround for symlink path...
		progress=`echo "$progress" | sed 's,^/home/thlu/synosrc/curr,/synosrc/allplat,'`

		platform=$(syno_get_platform $progress)
		branch=$(syno_get_branch $progress)
		project=$(syno_get_project $progress)

		if [ -z "$branch" -o -z "$platform" -o -z "$project" ]; then
			tt_warn "parse error for progress: $progress, platform: $platform, branch: $branch, project: $project"
			continue;
		fi
		projList=`syno_enum_project -p $platform -b $branch`
		projTotal=`printf "%s" "$projList" | wc -w`
		projIndex=`printf "%s" "$projList" | sed 's, ,\n,g' | grep -m 1 -n "^$project$" | cut -d: -f1`

		printf "(%5d)  %-5s %-9s: %-30s (%d/%d)\n" "$i" "$branch" "$platform" "$project" "$projIndex" "$projTotal"
	done
done
